@model InrappSos.AstridWeb.Models.RegisterViewModel
@{
    ViewBag.Title = "Registrera användare";
}

<link href="~/Scripts//bootstrap-multiselect/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bootstrap-multiselect/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>

<script type="text/javascript">

    var userRoles = @Html.Raw(Json.Encode(Model.Roller));

    $(document).ready(function () {
        $('[id*=RoleList]').multiselect({
            onInitialized: function () {
                $.each(userRoles, function (index, item) {
                    if (item.Selected) {
                        $("#RoleList > option")[index].selected = true;
                        $("#RoleList > option")[index].checked = true;
                    }
                });
                this.refresh();
            },
            onChange: function (option, checked, select) {
                //Update string of names, ChosenOrganisationTypesNames
                $('#ChosenRolesStr').val("");
                //var x = $(option).val();
                //var y = $('#Roller' + index + '__Id').val();
                //var z = $('#Roller' + index + '__Selected').val();
                $.each(userRoles, function (index, item) {
                    if ($('#Roller_' + index + '__Id').val() === $(option).val()) {
                        if ($('#Roller_' + index + '__Selected').val() === 'False')
                            $('#Roller_' + index + '__Selected').val('True');
                        else
                            $('#Roller_' + index + '__Selected').val('False');
                    }
                });
                setChosenRolesStr();
            },
            onSelectAll: function () {
                $.each(userRoles, function (index, item) {
                    $('#Roller_' + index + '__Selected').val('True');
                });
            },
            onDeselectAll: function () {
                $.each(userRoles, function (index, item) {
                    $('#Roller_' + index + '__Selected').val('False');
                });
            },
            includeSelectAllOption: false,
            nonSelectedText: 'Välj roll',
            allSelectedText: 'Alla valda',
            selectAllText: "Välj alla",
            nSelectedText: "valda",
            astridDefaultText: "Välj roll"
        });
    });

    function setChosenRolesStr() {
        var roleStr = "";

        [].forEach.call(document.querySelectorAll('#RoleList :checked'),
            function (role) {
                if (roleStr === "") {
                    roleStr = roleStr + role.text;
                } else {
                    roleStr = roleStr + ", " + role.text;
                }
            });

        $('#chosenRoles').val(roleStr);
        $('#ChosenRolesStr').val(roleStr);
    }

    $(function () {
        $("#txtEmail").focus();
    });

    function checkChosen() {
        alert("Hej");
        //  get all option elements
        $('#example option:selected');

        // get all option element values
        $('#example option:selected').map(function(a, item){return item.value;});
    }

</script>


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
   
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ChosenRolesStr)

    if (Model.Roller != null)
    {
        for (int i = 0; i < Model.Roller.Count; i++)
        {
            @Html.HiddenFor(x => x.Roller[i].Id)
            @Html.HiddenFor(x => x.Roller[i].Name)
            @Html.HiddenFor(x => x.Roller[i].Selected)
        }
    }


    <div class="row padding-top-55">
        <h4>Välkommen att registrera en ny användare till ASTRID</h4>
    </div>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @*<div class="form-group">
        @Html.LabelFor(m => m.Namn, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Namn, new { @class = "form-control", maxlength = 60, id = "txtName" })
        </div>
    </div>*@
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", maxlength = 60, id = "txtEmail" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Roll", new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.ChosenRolesStr, new { id = "chosenRoles", @class = "form-control", disabled = "disabled" })
        </div>
        @if (Model.Roller != null)
        {
            <div class="col-md-7" style="padding-left: 20px; float: left;">
                <select id="RoleList" multiple="multiple">
                    @*<p>Role Name: @Html.DropDownList("RoleName", (IEnumerable<SelectListItem>)ViewBag.Roles, "Select ...")</p>*@
                    @for (var i = 0; i < Model.Roller.Count; i++)
                    {
                        <option value=@Model.Roller[i].Id>@Model.Roller[i].Name</option>
                    }
                </select>
            </div>
        }
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new {  @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
   
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Spara" />
        </div>
    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
