@model InrappSos.AstridWeb.Models.ViewModels.OrganisationViewModels.OrganisationViewModel

<link href="~/Scripts//bootstrap-multiselect/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bootstrap-multiselect/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>

<script type="text/javascript">

    var users = @Html.Raw(Json.Encode(Model.ContactPersons));
    var usersRoleObjects = [];
    users.forEach(function (user, index) {
        usersRoleObjects[index] = user.ListOfRoles;
    });

    $(document).ready(function () {
        if ($('#VisaInaktiva').val().toUpperCase() === 'TRUE') {
            $('#chbxInaktiva').prop('checked', true);
        } else {
            $('#chbxInaktiva').prop('checked', false);
        }

        //Göm kolumnen med dropdown/Roller om ej edit-mode
        $('#usersTable tr th:eq(0)').hide();
        $('#usersTable tr th:eq(11)').hide();
        $("#usersTable tbody tr").each(function (i, row) {
            $(row).find('td:eq(0)').hide();
            $(row).find('td:eq(11)').hide();
            if (!$('#chbxInaktiva').is(':checked')) {
                if ($(row).find("#ContactAktivTom").val() !== "") {
                    $(row).hide();
                }  
            }
        });

        var modalConfirm = function test(callback) {
            $("#modal-btn-si").on("click", function () {
                callback(true);
                $("#mi-modal").modal('hide');
            });

            $("#modal-btn-no").on("click", function () {
                callback(false);
                $("#mi-modal").modal('hide');
            });
        };

        modalConfirm(function (confirm) {
            if (confirm) {
                var data = { 'contactId': $('#SelectedContactId').val(), 'selectedOrganisationId': $('#SelectedOrganisationId').val() };
                $.ajax({
                    url: '/Organisation/DeleteContact',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(data),
                    success: function (data) {
                        location.reload();
                        //On ajax success do this
                        //$("#pageContainer").html(data);
                        //tr.find('.edit-mode, .display-mode').toggle();
                        //$('#footer').hide();
                    }
                });
            } else {
                //Do nothing
                //$("#result").html("NO CONFIRMADO");
            }
        });
    });


    $(document).on('change', '#chbxInaktiva', function () {
        if ($('#chbxInaktiva').is(':checked')) {
            $('#VisaInaktiva').val(true);
        } else {
            $('#VisaInaktiva').val(false);
        }

        $("#usersTable tbody tr").each(function (i, row) {
            var $actualRow = $(row);
            if ($('#chbxInaktiva').is(':checked')) {
                $actualRow.show();
            } else {
                if ($actualRow.find("#ContactAktivTom").val() !== "") {
                    $actualRow.hide();
                }
            }
        });
    });

    $(function () {
        $("#searchText").focus();
    });

    function deleteContact(id, name) {
        $('#SelectedContactId').val(id);
        $('#SelectedCountyCode').val($('#Kommunkod').val());
        $("#mi-modal").modal("show");
        $('#modal-body').html("Vill du verkligen ta bort ta bort " + name + " ?");
    }

    $(function () {
        //Multiselect
        $('[id*=ddlRoleList]').multiselect({
            onInitialized: function () {
                var ddls = getTableRowsDDLs();

                users.forEach(function (user, idx) {
                    $.each(user.ListOfRoles, function (index, item) {
                        if (item.Selected) {
                            //hitta rätt rad/rätt drop
                            var ddl = ddls[idx];
                            var options = ddl.options;
                            options[index].selected = true;
                            options[index].checked = true;
                        }
                    });
                });
                this.refresh();
            },
            onChange: function (option, checked, select) {
                //Update string of ChosenRoles
                //var roleId = $(option).val();
                //var roleName = $("#ddlRoleList option:selected").text();
                var roleName = $(option).text();
                var userId = $('#SelectedContactId').val();
                users.forEach(function (user, index) {
                    if (user.ID === userId) {
                        user.StringOfRoles = "";
                        $.each(usersRoleObjects, function (idx, item) {
                            //Hitta användarens rollista
                            if (idx === index) {
                                //loopa användarens rollista
                                item.forEach(function (roll, i) {
                                    if (roll.Name === roleName) {
                                        if (roll.Selected) {
                                            roll.Selected = false;
                                        } else {
                                            roll.Selected = true;
                                        }
                                    }
                                });
                            }
                        });
                    }
                });
            },
            includeSelectAllOption: false,
            nonSelectedText: 'Välj roll',
            allSelectedText: 'Alla valda',
            selectAllText: "Välj alla",
            nSelectedText: "valda",
            astridDefaultText: "Välj roll"
        });

        $('.edit-mode').hide();
        $(' .cancel-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            $('#SelectedContactId').val();
            //Göm kolumnen med dropdown/Roller om ej edit-mode
            tr.find('td:eq(11)').hide();
            tr.find('td:eq(10)').show();
            tr.find('.edit-mode, .display-mode').toggle();
        });
        $('.edit-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            var userId = tr.find("#ContactId").val();
            $('#SelectedContactId').val(userId);
            //Visa kolumnen med dropdown/Roller om edit-mode
            tr.find('td:eq(11)').show();
            tr.find('td:eq(10)').hide();
            tr.find('.edit-mode, .display-mode').toggle();
        });
        $('.save-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            var contactId = tr.find("#ContactId").val();
            var contactPhoneNumber = tr.find("#ContactPhoneNumber").val();
            var contactNumber = tr.find("#ContactNumber").val();
            var contactPhoneNumberConfirmed;
            if (tr.find("#ContactPhoneNumberConfirmed").is(':checked')) {
                contactPhoneNumberConfirmed = true;
            } else {
                contactPhoneNumberConfirmed = false;
            }
            var contactAktivFrom = tr.find("#ContactAktivFrom").val();
            var contactAktivTom = tr.find("#ContactAktivTom").val();
            var rolesStr = "";
            var listOfRoles = [];
            users.forEach(function (user, index) {
                if (user.ID === contactId) {
                    rolesStr = user.StringOfRoles;
                    listOfRoles = user.ListOfRoles;
                }
            });
            var visaInaktiva = $('#VisaInaktiva').val();

            //Creating ApplicationUser JSON object
            var applicationUser =
            {
                "Id": contactId,
                "PhoneNumber": contactPhoneNumber,
                "PhoneNumberConfirmed": contactPhoneNumberConfirmed,
                "Kontaktnummer": contactNumber,
                "AktivFrom": contactAktivFrom,
                "AktivTom": contactAktivTom,
                "StringOfRoles": rolesStr,
                "ListOfRoles": listOfRoles
            };
            //Posting ApplicationUser object to controller's Update action method
            $.ajax({
                url: '/Organisation/UpdateOrganisationsContact?visaInaktiva=' + visaInaktiva,

                data: JSON.stringify(applicationUser),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    location.reload();
                    //$("#pageContainer").html(data);
                    //tr.find('.edit-mode, .display-mode').toggle();
                    //$('#footer').hide();
                    //alert('Record updated Successfully!!');
                }
            });

        });

        $('.edit-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            var contactPhoneNumber = tr.find("#ContactPhoneNumber").val();
            var contactNumber = tr.find("#ContactNumber").val();
            var contactAktivFrom = tr.find("#ContactAktivFrom").val();
            var contactAktivTom = tr.find("#ContactAktivTom").val();

            tr.find("#lblPhoneNumber").text(contactPhoneNumber);
            tr.find("#lblContactNumber").text(contactNumber);
            tr.find("#lblAktivFrom").text(contactAktivFrom);
            tr.find("#lblAktivTom").text(contactAktivTom);
        });
    });

    function getTableRowsDDLs() {
        return $(".ddl");
    }
</script>
<div id="pageContainer">
    @Html.HiddenFor(m => m.Kommunkod)

    <div class="modal fade ui-widget-content" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="mi-modal">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-body" id="modal-body">
                    <p>

                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="modal-btn-si">Ja</button>
                    <button type="button" class="btn btn-default" id="modal-btn-no">Avbryt</button>
                </div>
            </div>
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-8 padding-top-25">
            <section id="orgForm">
                @Html.AntiForgeryToken()
                <h4>Administrera kontaktpersoner för organisation</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @using (Html.BeginForm("SearchOrganisation", "Organisation", new { origin = "contacts" }, FormMethod.Post, null))
                {
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6">
                                <div id="custom-search-input">
                                    <div class="input-group col-md-12">
                                        <input type="text" class="form-control" id="searchText" name="searchText" style="max-width: 350px !important;" placeholder="Sök med organisationskod eller organisationsnamn" />
                                        <span class="input-group-btn">
                                            <button class="btn btn-info btn-lg" type="submit">
                                                <i class="glyphicon glyphicon-search"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </section>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-8 padding-top-25">
            <section id="contactForm">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @using (Html.BeginForm("SearchContact", "Organisation", new { origin = "contacts" }, FormMethod.Post, null))
                {
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6">
                                <div id="custom-search-input">
                                    <div class="input-group col-md-12">
                                        <input type="text" class="form-control" id="searchText" name="searchText" style="max-width: 350px !important;" placeholder="Sök med kontaktpersons epostadress eller namn" />
                                        <span class="input-group-btn">
                                            <button class="btn btn-info btn-lg" type="submit">
                                                <i class="glyphicon glyphicon-search"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </section>
        </div>
    </div>
    <br />


    @if (Model != null)
    {
        @* Om sökresultat för org finns, visa listan *@
        if (Model.SearchResult.Count > 0 && Model.SearchResult[0].Count > 0)
        {
            @Html.Partial("_SearchResult")
        }
        @* Om inga org-sökträffar *@
        else if (Model.SearchResult.Count == 1 && Model.SearchResult[0].Count == 0 && Model.Organisation == null)
        {
            <h2>Din sökning på gav inget resultat. </h2>
        }
        @* Om sökresultat för kontakperson finns, visa listan *@
        else if (Model.ContactSearchResult.Count > 0 && Model.ContactSearchResult[0].Count > 0)
        {
            @Html.Partial("_ContactSearchResult")
        }
        @* Om inga contact-sökträffar *@
        else if (Model.ContactSearchResult.Count == 1 && Model.ContactSearchResult[0].Count == 0 && Model.Organisation == null)
        {
            <h2>Din sökning på gav inget resultat. </h2>
        }
        @* Om en relevant organisation hittats, visa organisationsinfon *@
        else if (Model.Organisation != null)
        {
            @Html.HiddenFor(m => m.SelectedContactId)
            @Html.HiddenFor(m => m.SelectedOrganisationId)
            @Html.HiddenFor(m => m.VisaInaktiva)

            if (Model.ContactPersons != null)
            {
                for (int i = 0; i < Model.ContactPersons.Count; i++)
                {
                    @Html.HiddenFor(x => x.ContactPersons[i].ID)
                    @Html.HiddenFor(x => x.ContactPersons[i].StringOfRoles)
                    @Html.HiddenFor(x => x.ContactPersons[i].ListOfRoles)
                }
            }

            if (Model.Roller != null)
            {
                for (int i = 0; i < Model.Roller.Count; i++)
                {
                    @Html.HiddenFor(x => x.Roller[i].Id)
                    @Html.HiddenFor(x => x.Roller[i].Name)
                    @Html.HiddenFor(x => x.Roller[i].Selected)
                }
            }

            <div style="font-size: 1.2em; padding-left: 20px; padding-bottom: 20px;"><b>@Model.Organisation.Organisationsnamn</b></div>
            <div class="row" style="padding-left: 20px; margin-bottom: 0px;">
                <div class="col-md-2" style="padding: 0px; margin-left: 10px;  margin-right: -45px; white-space: nowrap">
                    @Html.LabelFor(m => m.VisaInaktiva)
                </div>
                <div class="col-md-2" style="padding-left: 0;font-size:0.9em; margin-top: 3px; margin-left: -10px;">
                    <div> @Html.CheckBoxFor(m => m.VisaInaktiva, new { id = "chbxInaktiva" })</div>
                </div>
            </div>

            <div id="gridContent" style="font-family: Arial; padding: 20px;">

                @{
                    ViewBag.Title = "Administrera kontaktpersoner";
                    var grid = new WebGrid(source: Model.ContactPersons, canPage: false, rowsPerPage: 10, ajaxUpdateContainerId: "contatcsGrid");
                }

                @grid.GetHtml(htmlAttributes: new { id = "usersTable" },
                                   tableStyle: "webgrid-table1500",
                                   headerStyle: "webgrid-header",
                                   footerStyle: "webgrid-footer",
                                   alternatingRowStyle: "webgrid-alternating-row",
                                   selectedRowStyle: "webgrid-selected-row",
                                   rowStyle: "webgrid-row-style",
                                   mode: WebGridPagerModes.All,
                                   columns: grid.Columns(
                                     grid.Column(null, null, format: @<input type="hidden" id="ContactId" name="IDHidden" value="@item.ID" />),
                                    grid.Column("Namn", format: @<text><span class="display-mode" style="display: inline-block;">@item.Namn</span><label id="ContactName" class="edit-mode">@item.Namn</label></text>, style: "col3Width"),
                                    grid.Column("Email", "E-post", format: @<text><span class="display-mode col3Width">@item.Email</span><label id="Epost" class="edit-mode col3Width">@item.Email</label></text>, style: "col3Width"),
                                    grid.Column("PhoneNumber", "Telefon", format: @<text><span class="display-mode col2Width"><label id="lblPhoneNumber">@item.PhoneNumber</label></span>
                                                <input type="text" id="ContactPhoneNumber" value="@item.PhoneNumber" class="edit-mode form-control" /></text>, style: "col2Width"),
                                    grid.Column("PhoneNumberConfirmed", "Telefonnr verifierat", format: @<text>
                                                <span class="display-mode"><input id="lblContactPhoneNumberVerified" class="checkbox" name="select" type="checkbox" disabled @( item.PhoneNumberConfirmed ? "checked='checked'" : "") value="@item.PhoneNumberConfirmed" /></span>
                                                <input id="ContactPhoneNumberConfirmed" class="edit-mode checkbox" name="select" type="checkbox" @( item.PhoneNumberConfirmed ? "checked='checked'" : "") value="@item.PhoneNumberConfirmed" /></text>, style: "colMinWidth centered"),
                                    grid.Column("Kontaktnummer", "Kontaktnummer", format: @<text><span class="display-mode col2Width"><label id="lblContactNumber">@item.Kontaktnummer</label></span>
                                                <input type="text" id="ContactNumber" value="@item.Kontaktnummer" class="edit-mode form-control" /></text>, style: "col2Width"),
                                    grid.Column("AktivFrom", "Aktiv fr.o.m", format: @<text><span class="display-mode"><label id="lblAktivFrom">@( item.AktivFrom != null ? item.AktivFrom.ToString("yyyy-MM-dd") : item.AktivFrom)</label></span>
                                                <input type="text" id="ContactAktivFrom" value="@( item.AktivFrom != null ? item.AktivFrom.ToString("yyyy-MM-dd") : item.AktivFrom)" class="edit-mode form-control" /></text>, style: "col2Width"),
                                    grid.Column("AktivTom", "Aktiv t.o.m", format: @<text><span class="display-mode"><label id="lblAktivTom">@( item.AktivTom != null ? item.AktivTom.ToString("yyyy-MM-dd") : item.AktivTom)</label></span>
                                                <input type="text" id="ContactAktivTom" value="@( item.AktivTom != null ? item.AktivTom.ToString("yyyy-MM-dd") : item.AktivTom)" class="edit-mode form-control" /></text>, style: "col2Width"),
                                    grid.Column("Status", "Status", format: @<text><span class="display-mode colMinWidth"><label id="lblStatus">@item.Status</label></span>
                                                <input type="text" id="ContactStatus" value="@item.Status" class="edit-mode form-control" /></text>, style: "colMinWidth"),
                                    grid.Column("Valda delregister", "Valda delregister", format: @<text><span class="display-mode col2Width" style="display: inline-block;">@item.ValdaDelregister</span><label id="lblValdaDelreg" class="edit-mode col3Width">@item.ValdaDelregister</label></text>, style: "col2Width"),
                                    grid.Column("Roller", "Roller", format: @<text><label id="lblRoller" class="display-mode col2Width" style="display: inline-block;">@item.StringOfRoles</label></text>, style: "col2Width"),
                                    grid.Column("Roller", format: @item => Html.DropDownListFor(m => m.Roller, new SelectList(@item.ListOfRoles, "Id", "Name"), new { id = "ddlRoleList", @class = "form-control edit-mode ddl", multiple = "multiple", style = "min-width:100px !important" })),
                                    grid.Column(null, format: @<text>
                                        <button class="edit-user display-mode btn btn-default">Ändra</button>
                                        @if (item.OkToDelete)
                                        {
                                            <button class="display-mode btn btn-default" onclick="deleteContact('@item.Id', '@item.Namn');return false;">Ta bort</button>
                                        }
                                        <button class="save-user edit-mode btn btn-default">Spara</button>
                                        <button class="cancel-user edit-mode btn btn-default">Avbryt</button>
                                    </text>, style: "col3Width", canSort: false)))

            </div>
        }
    }

</div>