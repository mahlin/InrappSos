@using InrappSos.AstridWeb.Models.ViewModels
@model InrappSos.AstridWeb.Models.ViewModels.OrganisationViewModels.OrganisationViewModel
@{
    ViewBag.Title = "Organisation";
}

<link href="~/Scripts/bootstrap-multiselect/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bootstrap-multiselect/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/custom.js")" type="text/javascript"></script>

<script type="text/javascript">

    var orgtyper = @Html.Raw(Json.Encode(Model.OrgtypesForOrgList));


    $(function () {
        $("#searchText").focus();
    });

    $(document).ready(function () {
        hideEditableForm();
        $('[id*=OrgtypList]').multiselect({
            onInitialized: function () {
                $.each(orgtyper, function (index, item) {
                    if (item.Selected) {
                        $("#OrgtypList > option")[index].selected = true;
                        $("#OrgtypList > option")[index].checked = true;
                    }
                });
                this.refresh();
            },
            onChange: function (option, checked, select) {
                //Update string of names, ChosenOrganisationTypesNames
                $('#ChosenOrganisationTypesNames').val("");
                $.each(orgtyper, function (index, item) {
                    if ($('#OrgtypesForOrgList_' + index + '__Organisationstypid').val() === $(option).val()) {
                        if ($('#OrgtypesForOrgList_' + index + '__Selected').val() === 'False')
                            $('#OrgtypesForOrgList_' + index + '__Selected').val('True');
                        else
                            $('#OrgtypesForOrgList_' + index + '__Selected').val('False');
                    }
                });
                setChosenOrganisationTypesNames();
            },
            onSelectAll: function () {
                $.each(orgtyper, function (index, item) {
                    $('#OrgtypesForOrgList_' + index + '__Selected').val('True');
                });
            },
            onDeselectAll: function () {
                $.each(orgtyper, function (index, item) {
                    $('#OrgtypesForOrgList_' + index + '__Selected').val('False');
                });
            },
            includeSelectAllOption: false,
            nonSelectedText: 'Ändra organisationstyp',
            allSelectedText: 'Alla valda',
            selectAllText: "Välj alla",
            nSelectedText: "valda",
            astridDefaultText: "Ändra organisationstyp"
        });
    });

    function setChosenOrganisationTypesNames() {
        var orgtypStr = "";

        [].forEach.call(document.querySelectorAll('#OrgtypList :checked'),
            function (orgtyp) {
                if (orgtypStr === "") {
                    orgtypStr = orgtypStr + orgtyp.text;
                } else {
                    orgtypStr = orgtypStr + ", " + orgtyp.text;
                }
            });

        $('#orgTypeNames').val(orgtypStr);
    }

    function showEditableForm() {
        $('#readOnlyOrg').hide();
        $('#editOrg').show();
    };

    function hideEditableForm() {
        $('#editOrg').hide();
        $('#readOnlyOrg').show();
    };


    $('#cancelLink').click(function () {
        $('#editOrg').hide();
        $('#readOnlyOrg').show();
        return false;
    });

    $('#editLink').click(function () {
        $('#readOnlyOrg').hide();
        $('#editOrg').show();
        return false;
    });


</script>
<br />
<div class="row">
    <div class="col-md-8 padding-top-25">
        <section id="orgForm">
            @Html.AntiForgeryToken()
            <h4>Administrera organisation</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @using (Html.BeginForm("SearchOrganisation", "Organisation", new { origin = "index" }, FormMethod.Post, null))
            {
                <div class="container">
                    <div class="row">
                        <div class="col-md-6">
                            <div id="custom-search-input">
                                <div class="input-group col-md-12">
                                    <input type="text" class="form-control" id="searchText" name="searchText" style="max-width: 350px !important;" placeholder="Sök med organisationskod eller organisationsnamn" />
                                    <span class="input-group-btn">
                                        <button class="btn btn-info btn-lg" type="submit">
                                            <i class="glyphicon glyphicon-search"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>
</div>
<br />

@if (Model != null)
{
    @* Om sökresultat finns, visa listan *@
    if (Model.SearchResult.Count > 0 && Model.SearchResult[0].Count > 0)
    {
        @Html.Partial("_SearchResult")
    }
    @* Om inga sökträffar *@
    else if (Model.SearchResult.Count == 1 && Model.SearchResult[0].Count == 0 && Model.Organisation == null)
    {
        <h2>Din sökning på gav inget resultat. </h2>
    }
    @* Om en relevant organisation hittats, visa organisationsinfon *@
    else if (Model.Organisation != null)
    {
        @Html.HiddenFor(m => m.Kommunkod)
        ;
        @Html.HiddenFor(m => m.SelectedOrganisationId)



        @*@Html.HiddenFor(m => m.OrgtypesForOrgList)*@

        <div style="font-size: 1.2em; padding-left: 20px; padding-bottom: 20px;"><b>@Model.Organisation.Organisationsnamn</b></div>
        <div id="readOnlyOrg">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Landstingskod)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Landstingskod)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Kommunkod)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Kommunkod)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Inrapporteringskod)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Inrapporteringskod)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Organisationstyp)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ChosenOrganisationTypesNames)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Organisationsnr)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Organisationsnr)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Organisationsnamn)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Organisationsnamn)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Hemsida)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Hemsida)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.EpostAdress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.EpostAdress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Telefonnr)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Telefonnr)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Adress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Adress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Postnr)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Postnr)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Postort)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Postort)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.Epostdoman)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.Epostdoman)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.AktivFrom)
                </dt>

                <dd>
                    @*@Html.DisplayFor(model => model.Organisation.AktivFrom == null ? "": model.Organisation.AktivFrom.ToString('yyyy-MM-dd'))*@

                    @Html.DisplayFor(model => model.Organisation.AktivFrom)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.AktivTom)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.AktivTom)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.SkapadDatum)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.SkapadDatum)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.SkapadAv)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.SkapadAv)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.AndradDatum)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.AndradDatum)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Organisation.AndradAv)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Organisation.AndradAv)
                </dd>

            </dl>
            <input type="button" class="btn btn-primary" value="Ändra organisation" id="editLink" onclick="showEditableForm();return false;" />
        </div>

        <div id="editOrg" class="form-horizontal">
            @using (Html.BeginForm("UpdateOrganisation", "Organisation", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Organisation.Id)
                @Html.HiddenFor(m => m.SelectedOrganisationId)
                @Html.HiddenFor(m => m.ChosenOrganisationTypesNames)

                if (Model.OrgtypesForOrgList != null)
                {
                    for (int i = 0; i < Model.OrgtypesForOrgList.Count; i++)
                    {
                        @Html.HiddenFor(x => x.OrgtypesForOrgList[i].Organisationstypid)
                        @Html.HiddenFor(x => x.OrgtypesForOrgList[i].Typnamn)
                        @Html.HiddenFor(x => x.OrgtypesForOrgList[i].Selected)
                }
            }

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Landstingskod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Organisation.Landstingskod, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Landstingskod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Kommunkod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Organisation.Kommunkod, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Kommunkod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Inrapporteringskod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Organisation.Inrapporteringskod, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Inrapporteringskod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Organisationstyp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ChosenOrganisationTypesNames, new { id = "orgTypeNames", @class = "form-control", disabled = "disabled" })
            </div>
            @if (Model.OrgtypesForOrgList != null)
            {
                <div class="col-md-7" style="padding-left: 20px; float: left;">
                    <select id="OrgtypList" multiple="multiple">
                        @for (var i = 0; i < Model.OrgtypesForOrgList.Count; i++)
                        {
                            <option value=@Model.OrgtypesForOrgList[i].Organisationstypid>@Model.OrgtypesForOrgList[i].Typnamn</option>
                        }
                    </select>
                </div>
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Organisationsnr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Organisationsnr, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Organisationsnr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Organisationsnamn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Organisationsnamn, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Organisationsnamn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Hemsida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Hemsida, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Hemsida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.EpostAdress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.EpostAdress, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.EpostAdress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Telefonnr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Telefonnr, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Telefonnr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Adress, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Adress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Postnr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Postnr, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Postnr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Postort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Postort, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Postort, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.Epostdoman, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.Epostdoman, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.Epostdoman, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.AktivFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.AktivFrom, "{0:yyyy-MM-dd}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.AktivFrom, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Organisation.AktivTom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Organisation.AktivTom, "{0:yyyy-MM-dd}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organisation.AktivTom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="btn-toolbar">
                <div class="col-md-offset-2">
                    <input type="submit" value="Spara" class="btn btn-default" style="margin-right: 15px; margin-left: 20px;" />
                    <input type="button" class="btn btn-default" value="Avbryt" id="cancelEditLink" onclick="hideEditableForm();return false;">
                </div>
            </div>
        </div>
}

        </div>
        <br />
        <br />


        @Html.Partial("_Contactpersons")
        <p>
            @Html.ActionLink(HttpUtility.HtmlDecode("Administrera kontaktpersoner &raquo;"), "GetOrganisationsContacts", "Organisation", new { selectedOrganisationId = Model.SelectedOrganisationId }, new { @class = "btn btn-primary" })
        </p>


        <br />
        <br />

        @Html.Partial("_OrgUnits")
        <p>
            @Html.ActionLink(HttpUtility.HtmlDecode("Administrera organisationsenheter &raquo;"), "GetOrganisationsOrgUnits", "Organisation", new { selectedOrganisationId = Model.SelectedOrganisationId }, new { @class = "btn btn-primary" })
        </p>

        <br />
        <br />

        @Html.Partial("_ReportObligations")
        <p>
            @Html.ActionLink(HttpUtility.HtmlDecode("Administrera uppgiftsskyldighet &raquo;"), "GetOrganisationsReportObligations", "Organisation", new { selectedOrganisationId = Model.SelectedOrganisationId }, new { @class = "btn btn-primary" })
        </p>
    }

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}


@*<div class="row">
        <div class="col-md-4">
            <h2>jada jada</h2>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
            </p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>bla bla</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum..</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Överkurs</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum..</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
        </div>
    </div>*@